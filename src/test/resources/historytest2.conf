// data files, each row represents an instance.
provider = "csvReader"   // csvReader or mySQLDB

csvReader {
  dataFile = "src/test/resources/testset1.csv"
  dataFilesHaveHeader = true
  // Separator used in the data files as string
  separator = ","
  // quoteCharacter =
  // escxapeCharacter
}

outputFile = "result"   // attribute only, no extension
outputFormat = "txt"   // "txt" or "json"

// minimal quality
minimalQuality = 0.0
// minimal generality
minGenerality = 0.0
// minimal probability
minProbability = 0.0

maxNumberOfItems = 100

// if true, the closure of the k best subgroups are computed.
computeClosureOfSubgroups = false
// if true, the refinements of subgroups are computed.
refineSubgroups = false

// Supported quality functions are presently Piatetsky (Default),Binomial, Split, Pearson, and Gini
qualityfunction = "Piatetsky"

// List of features
features = [
  {attribute = "label", typ = "Nominal"},
  {attribute = "seqId", typ = "Nominal"},
  {attribute = "ts", typ = "Date"},
  {attribute = "x", typ = "Nominal"},
  {attribute = "num", typ = "Numeric"}
]

// attribute of the target attribute
// all values of the target feature not listed in "groups" are subsumed to a group "default".
target {
  attribute = "label",
  labels = ["TARGET"]
}

time {
  format = "ss"
  attribute = ts
}

aggregators = [
  {
    sequenceIdAttribute = seqId,
    attribute = num,
    operator = Max,
    existsOnly = false,
    condition = {op: "ge" , arg1: {op: "attribute", arg = "self"}, arg2: {op: "double", arg: 0.0}},
    history = [1s]
  },
  {
    sequenceIdAttribute = seqId,
    attribute = num,
    operator = Mean,
    existsOnly = false,
    condition = {op: "ge" , arg1: {op: "attribute", arg = "self"}, arg2: {op: "double", arg: 0.0}},
    history = [3s]
    binning = {mode = "Entropy", bins = 5}
  }
]

// If true, overlapping intervals are generated and used in case of numerical values.
useOverlappingIntervals = false

multiThreading = false