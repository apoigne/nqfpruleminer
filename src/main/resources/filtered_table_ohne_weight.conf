// data files, each row represents an instance.
provider = "csvReader"   // csvReader or mySQLDB
dateTimeFormat = "yyyy-MM-dd HH:mm:ss.0"

outputFile = "result_filtered"   // name only, no extension
outputFormat = "txt"   // "txt" or "json"

numberOfWorkers = 4

csvReader {
  dataFile = "data/filtered_table_ohne_weight_new.csv"
  dataFilesHaveHeader = true
  // Separator used in the data files as string
  separator = ","
  // quoteCharacter =
  // escxapeCharacter
}

mySQLDB {
  host = "localhost"
  port = 3306
  database = "connect4"
  table = "connect4"
  user = "root"
  password = "poignepoigne"
}

// minimal quality
minimalQuality = 0.0
// minimal generality
minGenerality = 0.0
// minimal probability
minProbability = 0.0

numberOfBestSubgroups = 15

// if true, the closure of the k best subgroups are computed.
computeClosureOfSubgroups = false
// if true, the refinements of subgroups are computed.
refineSubgroups = false

// Supported quality functions are presently Piatetsky (Default),Binomial, Split, Pearson, and Gini
qualityfunction = "Piatetsky"

// List of features
features = [
  {name = "real_time_risk_scoring_nbr", typ = "Integer"},
  {name = "mcc", typ = "Nominal"},
  {name = "merchantId", typ = "Nominal"},
  {name = "posdata_14_16", typ = "Nominal"},
  {name = "posentry_1", typ = "Nominal"},
  {name = "posdata_10", typ = "Nominal"},
  {name = "posdata_5", typ = "Nominal"},
  {name = "de2_card_nbr", typ = "Nominal"},
  {name = "transmissiondatehour", typ = "Date"},
  {name = "issuer_id", typ = "Nominal"},
  {name = "settlement_amt", typ = "Numerical"},
  {name = "responseCode", typ = "Nominal"},
  {name = "xborder", typ = "Integer"},
  {name = "acquirerId", typ = "Nominal"},
  {name = "terminalId", typ = "Nominal"},
  {name = "eci", typ = "Nominal"},
  {name = "posdata_11", typ = "Nominal"},
  {name = "posentry_2", typ = "Nominal"},
  {name = "accCntryCode", typ = "Nominal"},
  {name = "IsTarget", typ = "Nominal"}
]

// name of the target attribute
// all values of the target feature not listed in "groups" are subsumed to a group "default".

target {
  name = "IsTarget",
  groups = ["1"]
}

time {
  attribute = transmissiondatehour,
  start = "2010-08-04 00:00:00",
  stop = "2018-09-03 23:59:59"
}
#
sequenceIdentifier = de2_card_nbr

derivedFeatures {
  groups = [
    {name = x1, group = [f1, g1]},
    {name = x2, group = [f2, g2], exclusive = false}
  ],

  aggregators = [
    {
      attributes = [merchantId],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = ${sequenceIdentifier},
      timeframeAttribute = ${time.attribute},
      timeframes = [1h, 2h, 8h, 1d, 7d]
    },
    {
      attributes = [mcc],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [2h, 8h, 7d]
    },
    {
      attributes = [mcc, posdata_11],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 7d]
    },
    {
      attributes = [posentry_1],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 2h, 8h, 1d, 7d]
    },
    {
      attributes = [mcc, posentry_1, accCntryCode],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 2h, 8h, 7d]
    },
    {
      attributes = [mcc, accCntryCode],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 2h, 8h, 7d]
    },
    {
      attributes = [accCntryCode],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [7d]
    },
    {
      attributes = [transactionAmountCrcyCode],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [7d]
    },
    {
      attributes = [acquirerId, accCntryCode],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1d]
    }
    {
      attributes = [eci],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1d]
    },
    {
      attributes = [posentry_2, posdata_11],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 1d, 7d]
    },
    {
      attributes = [posentry_1, posdata_11],
      typ = Exists,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 1d, 7d]
    },
    {
      aggregatedField = settlement_amt,
      typ = Aggregation,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      aggregationOp= sum,
      binning = { mode = Entropy, bins = 5},
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 8h, 1d]
    },
    {
      typ = Counter,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      binning = { mode = Entropy, bins = 5},
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 8h, 1d]
    },
    {
      aggregatedField = xborder,
      typ = Aggregation,
      minPositives = 10,
      minQuality = 10.0,
      topKFeatures = 10,
      sequenceIdentifier = de2_card_nbr,
      aggregationOp= sum
      binning = { mode = Entropy, bins = 5},
      timeframeAttribute = transmissiondatehour,
      timeframes = [1h, 8h, 1d, 7d]
    }

  ]
}

groups = [
  {name = x1, group = [f1, g1]},
  {name = x2, group = [f2, g2]}
]