// data files, each row represents an instance.
provider = "csvReader"   // csvReader or mySQLDB

csvReader {
  dataFile = "examples/FromRuleCreator/filtered_table_ohne_weight_new.csv"
  dataFilesHaveHeader = true
  // Separator used in the data files as string
  separator = ","
  // quoteCharacter =
  // escxapeCharacter
}

outputFile = "result_ahmed"   // attribute only, no extension
outputFormat = "txt"   // "txt" or "json"

numberOfBestSubgroups = 100
lengthOfSubgroups = 3

numberOfWorkers = 1
//delimitersForParallelExecution = [40, 60]


// minimal quality
minimalQuality = 0.0
// minimal generality
minGenerality = 0.0
// minimal probability
minProbability = 0.0

//maxNumberOfItems = 100

// if true, the closure of the k best subgroups are computed.
computeClosureOfSubgroups = false
// if true, the refinements of subgroups are computed.
refineSubgroups = false

// Supported quality functions are presently Piatetsky (Default),Binomial, Split, Pearson, and Gini
qualityfunction = "Piatetsky"

intervals = [50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 820, 840, 860, 880, 900, 910, 920, 930, 940, 950, 960, 970, 980, 990]

// List of features
features = [
  {attribute = "real_time_risk_scoring_nbr", typ = "Numeric", binning = {mode = "Interval", intervals = ${intervals}}},
  {attribute = "mcc", typ = "Numeric", condition = {op = "false"}},
  {attribute = "merchantId", typ = "Nominal", condition = {op = "false"}},
  {attribute = "posdata_14_16", typ = "Nominal"},
  {attribute = "posentry_1", typ = "Nominal"}
  {attribute = "posdata_5", typ = "Nominal"}
  {attribute = "posdata_10", typ = "Nominal"}
  {attribute = "de2_card_nbr", typ = "Nominal", condition = {op = "false"}}
  {attribute = "transmissiondatehour", typ = "Date"}
  {attribute = "settlement_amt", typ = "Numeric", binning = {mode = "Interval", intervals = ${intervals}}}
  {attribute = "responseCode", typ = "Nominal", condition = {op = "false"}}
  {attribute = "xborder", typ = "Numeric", condition = {op = "false"}}
  {attribute = "acquirerId", typ = "Nominal"}
  {attribute = "eci", typ = "Nominal"}
  {attribute = "posdata_11", typ = "Nominal"}
  {attribute = "posentry_2", typ = "Nominal"}
  {attribute = "IsTarget", typ = "Nominal"}
]


// attribute of the target attribute
// all values of the target feature not listed in "groups" are subsumed to a group "default".
target {
  attribute = "IsTarget"
  labels = ["1"]
}

time {
  format = "yyyy-MM-dd HH:mm:ss.0"
  attribute = "transmissiondatehour"
  start = "2010-08-04 00:00:00.0"
  end = "2010-08-04 00:00:00.0"
}

//instanceFilter =
//  {
//    op: and,
//    arg1: {op: ge, arg1: {op: attribute, arg: transmissiondatehour}, arg2: {op: "date", arg: "2010-08-04 00:00:00.0"}},
//    arg2: {op: le, arg1: {op: "date", arg: "2010-08-04 00:00:00.0"}, arg2: {op: attribute, arg: transmissiondatehour}}
//  }

issuerAttribute = issuer_id

prefixFeatures = [
  {attribute = "mcc", prefixes = [3]}
]

rangedFeatures = [
  {attribute = "mcc", ranges = [{lo = 5698, hi = 7230}, {lo = 0763, hi = 5211}]}

]


aggregators = [
  {
    sequenceIdAttribute = de2_card_nbr,
    attributes = [],
    operator = COUNT,
    existsOnly = false,
    condition = {op: ge, arg1: {op: "attribute", arg = "self"}, arg2: {op: "double", arg: 2.0}},
    history = [1s, 1d]
  },
  {
    sequenceIdAttribute = de2_card_nbr,
    attribute = xborder,
    operator = SUM,
    existsOnly = false,
    condition = {op: ge, arg1: {op: "attribute", arg = "self"}, arg2: {op: "double", arg: 0.0}},
    history = [10h]
  }
  {
    sequenceIdAttribute = de2_card_nbr,
    attribute = mcc,
    operator = SUM,
    existsOnly = false,
    condition = {op: ge, arg1: {op: "attribute", arg = "self"}, arg2: {op: "double", arg: 0.0}},
    history = [10h]
    binning = {mode = "Entropy", bins = 5}
  }
]

// If true, overlapping intervals are generated and used in case of numerical values.
useOverlappingIntervals = false

preInstanceFilter = [
  {op = "not", arg = {attribute = "merchantId"}}
]

// multiThreading = false   not used